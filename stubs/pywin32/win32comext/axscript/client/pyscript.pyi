from _typeshed import Incomplete

from win32com.server.exception import Exception as Exception
from win32comext.axscript.client import framework
from win32comext.axscript.client.framework import (
    SCRIPTTEXT_FORCEEXECUTION as SCRIPTTEXT_FORCEEXECUTION,
    SCRIPTTEXT_ISEXPRESSION as SCRIPTTEXT_ISEXPRESSION,
    SCRIPTTEXT_ISPERSISTENT as SCRIPTTEXT_ISPERSISTENT,
    RaiseAssert as RaiseAssert,
    trace as trace,
)

PyScript_CLSID: str
debugging_attr: int

def debug_attr_print(*args) -> None: ...
def ExpandTabs(text): ...
def AddCR(text): ...

class AXScriptCodeBlock(framework.AXScriptCodeBlock):
    def GetDisplayName(self): ...

class AXScriptAttribute:
    def __init__(self, engine) -> None: ...
    def __getattr__(self, attr): ...

class NamedScriptAttribute:
    def __init__(self, scriptItem) -> None: ...
    def __getattr__(self, attr): ...
    def __setattr__(self, attr, value): ...

class ScriptItem(framework.ScriptItem):
    scriptlets: Incomplete
    attributeObject: Incomplete
    def __init__(self, parentItem, name, dispatch, flags) -> None: ...
    def Reset(self) -> None: ...
    dispatchContainer: Incomplete
    def Close(self) -> None: ...
    def Register(self) -> None: ...

class PyScript(framework.COMScript):
    globalNameSpaceModule: Incomplete
    codeBlocks: Incomplete
    scriptDispatch: Incomplete
    def __init__(self) -> None: ...
    persistedCodeBlocks: Incomplete
    mapKnownCOMTypes: Incomplete
    codeBlockCounter: int
    def InitNew(self) -> None: ...
    def Stop(self): ...
    def Reset(self): ...
    def RegisterNamedItem(self, item) -> None: ...
    def DoExecutePendingScripts(self) -> None: ...
    def DoRun(self) -> None: ...
    def Close(self) -> None: ...
    def GetScriptDispatch(self, name): ...
    def MakeEventMethodName(self, subItemName, eventName): ...
    def DoAddScriptlet(
        self, defaultName, code, itemName, subItemName, eventName, delimiter, sourceContextCookie, startLineNumber
    ) -> None: ...
    def DoProcessScriptItemEvent(self, item, event, lcid, wFlags, args): ...
    def DoParseScriptText(self, code, sourceContextCookie, startLineNumber, bWantResult, flags): ...
    def GetNamedItemClass(self): ...
    def ResetNamespace(self) -> None: ...

def DllRegisterServer() -> None: ...
def Register(klass=...): ...
