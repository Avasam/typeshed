from _typeshed import Incomplete
from typing import Any
from typing_extensions import final

ATTACH_PARENT_PROCESS: int
BACKGROUND_BLUE: int
BACKGROUND_GREEN: int
BACKGROUND_INTENSITY: int
BACKGROUND_RED: int
COMMON_LVB_GRID_HORIZONTAL: int
COMMON_LVB_GRID_LVERTICAL: int
COMMON_LVB_GRID_RVERTICAL: int
COMMON_LVB_LEADING_BYTE: int
COMMON_LVB_REVERSE_VIDEO: int
COMMON_LVB_TRAILING_BYTE: int
COMMON_LVB_UNDERSCORE: int
CONSOLE_FULLSCREEN: int
CONSOLE_FULLSCREEN_HARDWARE: int
CONSOLE_FULLSCREEN_MODE: int
CONSOLE_MOUSE_DOWN: int
CONSOLE_MOUSE_SELECTION: int
CONSOLE_NO_SELECTION: int
CONSOLE_SELECTION_IN_PROGRESS: int
CONSOLE_SELECTION_NOT_EMPTY: int
CONSOLE_TEXTMODE_BUFFER: int
CONSOLE_WINDOWED_MODE: int
CTRL_BREAK_EVENT: int
CTRL_C_EVENT: int
ENABLE_ECHO_INPUT: int
ENABLE_LINE_INPUT: int
ENABLE_MOUSE_INPUT: int
ENABLE_PROCESSED_INPUT: int
ENABLE_PROCESSED_OUTPUT: int
ENABLE_WINDOW_INPUT: int
ENABLE_WRAP_AT_EOL_OUTPUT: int
FOCUS_EVENT: int
FOREGROUND_BLUE: int
FOREGROUND_GREEN: int
FOREGROUND_INTENSITY: int
FOREGROUND_RED: int
KEY_EVENT: int
LOCALE_USER_DEFAULT: int
MENU_EVENT: int
MOUSE_EVENT: int
STD_ERROR_HANDLE: int
STD_INPUT_HANDLE: int
STD_OUTPUT_HANDLE: int
WINDOW_BUFFER_SIZE_EVENT: int

@final
class PyCOORDType:
    X: Any
    Y: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...

@final
class PyConsoleScreenBufferType:
    def __init__(self, *args, **kwargs) -> None: ...
    def Close(self, *args, **kwargs) -> Any: ...
    def Detach(self, *args, **kwargs) -> Any: ...
    def FillConsoleOutputAttribute(self, *args, **kwargs) -> Any: ...
    def FillConsoleOutputCharacter(self, *args, **kwargs) -> Any: ...
    def FlushConsoleInputBuffer(self, *args, **kwargs) -> Any: ...
    def GetConsoleCursorInfo(self, *args, **kwargs) -> Any: ...
    def GetConsoleFontSize(self, *args, **kwargs) -> Any: ...
    def GetConsoleMode(self, *args, **kwargs) -> Any: ...
    def GetConsoleScreenBufferInfo(self, *args, **kwargs) -> Any: ...
    def GetCurrentConsoleFont(self, *args, **kwargs) -> Any: ...
    def GetLargestConsoleWindowSize(self, *args, **kwargs) -> Any: ...
    def GetNumberOfConsoleInputEvents(self, *args, **kwargs) -> Any: ...
    def PeekConsoleInput(self, *args, **kwargs) -> Any: ...
    def ReadConsole(self, *args, **kwargs) -> Any: ...
    def ReadConsoleInput(self, *args, **kwargs) -> Any: ...
    def ReadConsoleOutputAttribute(self, *args, **kwargs) -> Any: ...
    def ReadConsoleOutputCharacter(self, *args, **kwargs) -> Any: ...
    def ScrollConsoleScreenBuffer(self, *args, **kwargs) -> Any: ...
    def SetConsoleActiveScreenBuffer(self, *args, **kwargs) -> Any: ...
    def SetConsoleCursorInfo(self, *args, **kwargs) -> Any: ...
    def SetConsoleCursorPosition(self, *args, **kwargs) -> Any: ...
    def SetConsoleDisplayMode(self, *args, **kwargs) -> Any: ...
    def SetConsoleFont(self, *args, **kwargs) -> Any: ...
    def SetConsoleMode(self, *args, **kwargs) -> Any: ...
    def SetConsoleScreenBufferSize(self, *args, **kwargs) -> Any: ...
    def SetConsoleTextAttribute(self, *args, **kwargs) -> Any: ...
    def SetConsoleWindowInfo(self, *args, **kwargs) -> Any: ...
    def SetStdHandle(self, *args, **kwargs) -> Any: ...
    def WriteConsole(self, *args, **kwargs) -> Any: ...
    def WriteConsoleInput(self, *args, **kwargs) -> Any: ...
    def WriteConsoleOutputAttribute(self, *args, **kwargs) -> Any: ...
    def WriteConsoleOutputCharacter(self, *args, **kwargs) -> Any: ...
    def __abs__(self) -> Any: ...
    def __add__(self, other) -> Any: ...
    def __and__(self, other) -> Any: ...
    def __bool__(self) -> Any: ...
    def __delattr__(self, name) -> Any: ...
    def __divmod__(self, other) -> Any: ...
    def __float__(self) -> Any: ...
    def __int__(self) -> Any: ...
    def __invert__(self) -> Any: ...
    def __lshift__(self, other) -> Any: ...
    def __mod__(self, other) -> Any: ...
    def __mul__(self, other) -> Any: ...
    def __neg__(self) -> Any: ...
    def __or__(self, other) -> Any: ...
    def __pos__(self) -> Any: ...
    def __pow__(self, other, mod: Incomplete | None = ...) -> Any: ...
    def __radd__(self, other) -> Any: ...
    def __rand__(self, other) -> Any: ...
    def __rdivmod__(self, other) -> Any: ...
    def __rlshift__(self, other) -> Any: ...
    def __rmod__(self, other) -> Any: ...
    def __rmul__(self, other) -> Any: ...
    def __ror__(self, other) -> Any: ...
    def __rpow__(self, other, mod: Incomplete | None = ...) -> Any: ...
    def __rrshift__(self, other) -> Any: ...
    def __rshift__(self, other) -> Any: ...
    def __rsub__(self, other) -> Any: ...
    def __rxor__(self, other) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...
    def __sub__(self, other) -> Any: ...
    def __xor__(self, other) -> Any: ...

@final
class PyINPUT_RECORDType:
    ButtonState: Any
    Char: Any
    CommandId: Any
    ControlKeyState: Any
    EventFlags: Any
    EventType: Any
    KeyDown: Any
    MousePosition: Any
    RepeatCount: Any
    SetFocus: Any
    Size: Any
    VirtualKeyCode: Any
    VirtualScanCode: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...

@final
class PySMALL_RECTType:
    Bottom: Any
    Left: Any
    Right: Any
    Top: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def __delattr__(self, name) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...

class error(Exception): ...

def AddConsoleAlias(*args, **kwargs) -> Any: ...
def AllocConsole(*args, **kwargs) -> Any: ...
def AttachConsole(*args, **kwargs) -> Any: ...
def CreateConsoleScreenBuffer(*args, **kwargs) -> Any: ...
def FreeConsole(*args, **kwargs) -> Any: ...
def GenerateConsoleCtrlEvent(*args, **kwargs) -> Any: ...
def GetConsoleAliasExes(*args, **kwargs) -> Any: ...
def GetConsoleAliases(*args, **kwargs) -> Any: ...
def GetConsoleCP(*args, **kwargs) -> Any: ...
def GetConsoleDisplayMode(*args, **kwargs) -> Any: ...
def GetConsoleOutputCP(*args, **kwargs) -> Any: ...
def GetConsoleProcessList(*args, **kwargs) -> Any: ...
def GetConsoleSelectionInfo(*args, **kwargs) -> Any: ...
def GetConsoleTitle(*args, **kwargs) -> Any: ...
def GetConsoleWindow(*args, **kwargs) -> Any: ...
def GetNumberOfConsoleFonts(*args, **kwargs) -> Any: ...
def GetStdHandle(*args, **kwargs) -> Any: ...
def SetConsoleCP(*args, **kwargs) -> Any: ...
def SetConsoleOutputCP(*args, **kwargs) -> Any: ...
def SetConsoleTitle(*args, **kwargs) -> Any: ...
