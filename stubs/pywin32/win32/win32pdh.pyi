from typing import Any

PDH_FMT_1000: int
PDH_FMT_ANSI: int
PDH_FMT_DOUBLE: int
PDH_FMT_LARGE: int
PDH_FMT_LONG: int
PDH_FMT_NOCAP100: int
PDH_FMT_NODATA: int
PDH_FMT_NOSCALE: int
PDH_FMT_RAW: int
PDH_FMT_UNICODE: int
PDH_MAX_SCALE: int
PDH_MIN_SCALE: int
PDH_PATH_WBEM_INPUT: int
PDH_PATH_WBEM_RESULT: int
PDH_VERSION: int
PERF_DETAIL_ADVANCED: int
PERF_DETAIL_EXPERT: int
PERF_DETAIL_NOVICE: int
PERF_DETAIL_WIZARD: int

class counter_status_error(Exception): ...
class error(Exception): ...

def AddCounter(*args, **kwargs) -> Any: ...
def AddEnglishCounter(*args, **kwargs) -> Any: ...
def BrowseCounters(*args, **kwargs) -> Any: ...
def CloseQuery(*args, **kwargs) -> Any: ...
def CollectQueryData(*args, **kwargs) -> Any: ...
def ConnectMachine(*args, **kwargs) -> Any: ...
def EnumObjectItems(*args, **kwargs) -> Any: ...
def EnumObjects(*args, **kwargs) -> Any: ...
def ExpandCounterPath(*args, **kwargs) -> Any: ...
def GetCounterInfo(*args, **kwargs) -> Any: ...
def GetFormattedCounterArray(*args, **kwargs) -> Any: ...
def GetFormattedCounterValue(*args, **kwargs) -> Any: ...
def LookupPerfIndexByName(*args, **kwargs) -> Any: ...
def LookupPerfNameByIndex(*args, **kwargs) -> Any: ...
def MakeCounterPath(*args, **kwargs) -> Any: ...
def OpenQuery(*args, **kwargs) -> Any: ...
def ParseCounterPath(*args, **kwargs) -> Any: ...
def ParseInstanceName(*args, **kwargs) -> Any: ...
def RemoveCounter(*args, **kwargs) -> Any: ...
def SetCounterScaleFactor(*args, **kwargs) -> Any: ...
def ValidatePath(*args, **kwargs) -> Any: ...
