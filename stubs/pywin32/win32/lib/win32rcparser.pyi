from _typeshed import Incomplete

defaultControlStyle: Incomplete
defaultControlStyleEx: int

class DialogDef:
    name: str
    id: int
    style: int
    styleEx: Incomplete
    caption: str
    font: str
    fontSize: int
    x: int
    y: int
    w: int
    h: int
    template: Incomplete
    styles: Incomplete
    stylesEx: Incomplete
    controls: Incomplete
    def __init__(self, n, i) -> None: ...
    def createDialogTemplate(self): ...

class ControlDef:
    id: str
    controlType: str
    subType: str
    idNum: int
    style: Incomplete
    styleEx: Incomplete
    label: str
    x: int
    y: int
    w: int
    h: int
    styles: Incomplete
    stylesEx: Incomplete
    def __init__(self) -> None: ...
    def toString(self): ...
    def createDialogTemplate(self): ...

class StringDef:
    id: Incomplete
    idNum: Incomplete
    value: Incomplete
    def __init__(self, id, idNum, value) -> None: ...

class RCParser:
    next_id: int
    dialogs: Incomplete
    debugEnabled: bool
    token: str
    ungot: bool
    ids: Incomplete
    names: Incomplete
    bitmaps: Incomplete
    stringTable: Incomplete
    icons: Incomplete
    def __init__(self) -> None: ...
    def debug(self, *args) -> None: ...
    def getToken(self): ...
    def ungetToken(self) -> None: ...
    def getCheckToken(self, expected): ...
    def getCommaToken(self): ...
    def currentNumberToken(self): ...
    def currentQuotedString(self): ...
    def load(self, rcstream) -> None: ...
    lex: Incomplete
    def open(self, rcstream) -> None: ...
    def parseH(self, file) -> None: ...
    def parse(self) -> None: ...
    def addId(self, id_name): ...
    def lang(self) -> None: ...
    def parse_textinclude(self, res_id) -> None: ...
    def parse_stringtable(self) -> None: ...
    def parse_bitmap(self, name): ...
    def parse_icon(self, name): ...
    def parse_bitmap_or_icon(self, name, dic) -> None: ...
    def parse_dialog(self, name) -> None: ...
    def dialogStyle(self, dlg) -> None: ...
    def dialogExStyle(self, dlg) -> None: ...
    def styles(self, defaults, defaultStyle): ...
    def dialogCaption(self, dlg) -> None: ...
    def dialogFont(self, dlg) -> None: ...
    def controls(self, dlg) -> None: ...

def ParseStreams(rc_file, h_file): ...
def Parse(rc_name, h_name: Incomplete | None = ...): ...
def GenerateFrozenResource(rc_name, output_name, h_name: Incomplete | None = ...) -> None: ...
