from _typeshed import Incomplete

is64bit: Incomplete

def UnpackWMNOTIFY(lparam): ...
def UnpackNMITEMACTIVATE(lparam): ...
def PackMENUITEMINFO(
    fType: Incomplete | None = ...,
    fState: Incomplete | None = ...,
    wID: Incomplete | None = ...,
    hSubMenu: Incomplete | None = ...,
    hbmpChecked: Incomplete | None = ...,
    hbmpUnchecked: Incomplete | None = ...,
    dwItemData: Incomplete | None = ...,
    text: Incomplete | None = ...,
    hbmpItem: Incomplete | None = ...,
    dwTypeData: Incomplete | None = ...,
): ...
def UnpackMENUITEMINFO(s): ...
def EmptyMENUITEMINFO(mask: Incomplete | None = ..., text_buf_size: int = ...): ...
def PackMENUINFO(
    dwStyle: Incomplete | None = ...,
    cyMax: Incomplete | None = ...,
    hbrBack: Incomplete | None = ...,
    dwContextHelpID: Incomplete | None = ...,
    dwMenuData: Incomplete | None = ...,
    fMask: int = ...,
): ...
def UnpackMENUINFO(s): ...
def EmptyMENUINFO(mask: Incomplete | None = ...): ...
def PackTVINSERTSTRUCT(parent, insertAfter, tvitem): ...
def PackTVITEM(hitem, state, stateMask, text, image, selimage, citems, param): ...
def EmptyTVITEM(hitem, mask: Incomplete | None = ..., text_buf_size: int = ...): ...
def UnpackTVITEM(buffer): ...
def UnpackTVNOTIFY(lparam): ...
def UnpackTVDISPINFO(lparam): ...
def PackLVITEM(
    item: Incomplete | None = ...,
    subItem: Incomplete | None = ...,
    state: Incomplete | None = ...,
    stateMask: Incomplete | None = ...,
    text: Incomplete | None = ...,
    image: Incomplete | None = ...,
    param: Incomplete | None = ...,
    indent: Incomplete | None = ...,
): ...
def UnpackLVITEM(buffer): ...
def UnpackLVDISPINFO(lparam): ...
def UnpackLVNOTIFY(lparam): ...
def EmptyLVITEM(item, subitem, mask: Incomplete | None = ..., text_buf_size: int = ...): ...
def PackLVCOLUMN(
    fmt: Incomplete | None = ...,
    cx: Incomplete | None = ...,
    text: Incomplete | None = ...,
    subItem: Incomplete | None = ...,
    image: Incomplete | None = ...,
    order: Incomplete | None = ...,
): ...
def UnpackLVCOLUMN(lparam): ...
def EmptyLVCOLUMN(mask: Incomplete | None = ..., text_buf_size: int = ...): ...
def PackLVHITTEST(pt): ...
def UnpackLVHITTEST(buf): ...
def PackHDITEM(
    cxy: Incomplete | None = ...,
    text: Incomplete | None = ...,
    hbm: Incomplete | None = ...,
    fmt: Incomplete | None = ...,
    param: Incomplete | None = ...,
    image: Incomplete | None = ...,
    order: Incomplete | None = ...,
): ...
def PackDEV_BROADCAST(devicetype, rest_fmt, rest_data, extra_data=...): ...
def PackDEV_BROADCAST_HANDLE(handle, hdevnotify: int = ..., guid=..., name_offset: int = ..., data=...): ...
def PackDEV_BROADCAST_VOLUME(unitmask, flags): ...
def PackDEV_BROADCAST_DEVICEINTERFACE(classguid, name: str = ...): ...

class DEV_BROADCAST_INFO:
    devicetype: Incomplete
    def __init__(self, devicetype, **kw) -> None: ...

def UnpackDEV_BROADCAST(lparam): ...
