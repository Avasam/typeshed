from _typeshed import Incomplete

from pythonwin.pywin.mfc import dialog as dialog
from pythonwin.pywin.tools import hierlist as hierlist

class HLIErrorItem(hierlist.HierListItem):
    text: Incomplete
    def __init__(self, text) -> None: ...
    def GetText(self): ...

class HLICLBRItem(hierlist.HierListItem):
    name: Incomplete
    file: Incomplete
    lineno: Incomplete
    suffix: Incomplete
    def __init__(self, name, file, lineno, suffix: str = ...) -> None: ...
    def __lt__(self, other): ...
    def __eq__(self, other): ...
    def GetText(self): ...
    def TakeDefaultAction(self) -> None: ...
    def PerformItemSelected(self) -> None: ...

class HLICLBRClass(HLICLBRItem):
    super: Incomplete
    methods: Incomplete
    def __init__(self, clbrclass, suffix: str = ...) -> None: ...
    def GetSubList(self): ...
    def IsExpandable(self): ...
    def GetBitmapColumn(self): ...

class HLICLBRFunction(HLICLBRClass):
    def GetBitmapColumn(self): ...

class HLICLBRMethod(HLICLBRItem):
    def GetBitmapColumn(self): ...

class HLIModuleItem(hierlist.HierListItem):
    path: Incomplete
    def __init__(self, path) -> None: ...
    def GetText(self): ...
    def IsExpandable(self): ...
    def TakeDefaultAction(self) -> None: ...
    def GetBitmapColumn(self): ...
    def GetSubList(self): ...

def MakePathSubList(path): ...

class HLIDirectoryItem(hierlist.HierListItem):
    path: Incomplete
    bSubDirs: Incomplete
    displayName: Incomplete
    def __init__(self, path, displayName: Incomplete | None = ..., bSubDirs: int = ...) -> None: ...
    def IsExpandable(self): ...
    def GetText(self): ...
    def GetSubList(self): ...

class HLIProjectRoot(hierlist.HierListItem):
    projectName: Incomplete
    displayName: Incomplete
    def __init__(self, projectName, displayName: Incomplete | None = ...) -> None: ...
    def GetText(self): ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class HLIRoot(hierlist.HierListItem):
    def __init__(self) -> None: ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class dynamic_browser(dialog.Dialog):
    style: Incomplete
    cs: Incomplete
    dt: Incomplete
    hier_list: Incomplete
    def __init__(self, hli_root) -> None: ...
    def OnInitDialog(self): ...
    def on_size(self, params) -> None: ...

def BrowseDialog() -> None: ...
def DockableBrowserCreator(parent): ...
def DockablePathBrowser() -> None: ...

Browse = DockablePathBrowser
