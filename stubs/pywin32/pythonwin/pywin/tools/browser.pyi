from _typeshed import Incomplete

from pythonwin.pywin.mfc import dialog as dialog, docview as docview
from pythonwin.pywin.tools import hierlist as hierlist

special_names: Incomplete

class HLIPythonObject(hierlist.HierListItem):
    myobject: Incomplete
    knownExpandable: Incomplete
    name: Incomplete
    def __init__(self, myobject: Incomplete | None = ..., name: Incomplete | None = ...) -> None: ...
    def __lt__(self, other): ...
    def __eq__(self, other): ...
    def GetText(self): ...
    def InsertDocString(self, lst) -> None: ...
    def GetSubList(self): ...
    def IsExpandable(self): ...
    def CalculateIsExpandable(self): ...
    def GetBitmapColumn(self): ...
    def TakeDefaultAction(self) -> None: ...

class HLIDocString(HLIPythonObject):
    def GetHLIType(self): ...
    def GetText(self): ...
    def IsExpandable(self): ...
    def GetBitmapColumn(self): ...

class HLIModule(HLIPythonObject):
    def GetHLIType(self): ...

class HLIFrame(HLIPythonObject):
    def GetHLIType(self): ...

class HLITraceback(HLIPythonObject):
    def GetHLIType(self): ...

class HLIClass(HLIPythonObject):
    def GetHLIType(self): ...
    def GetSubList(self): ...

class HLIMethod(HLIPythonObject):
    def GetHLIType(self): ...
    def GetText(self): ...

class HLICode(HLIPythonObject):
    def GetHLIType(self): ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class HLIInstance(HLIPythonObject):
    def GetHLIType(self): ...
    def GetText(self): ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class HLIBuiltinFunction(HLIPythonObject):
    def GetHLIType(self): ...

class HLIFunction(HLIPythonObject):
    def GetHLIType(self): ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class HLISeq(HLIPythonObject):
    def GetHLIType(self): ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class HLIList(HLISeq):
    def GetHLIType(self): ...

class HLITuple(HLISeq):
    def GetHLIType(self): ...

class HLIDict(HLIPythonObject):
    def GetHLIType(self): ...
    def IsExpandable(self): ...
    def GetSubList(self): ...

class HLIString(HLIPythonObject):
    def IsExpandable(self): ...

TypeMap: Incomplete

def MakeHLI(ob, name: Incomplete | None = ...): ...

class DialogShowObject(dialog.Dialog):
    object: Incomplete
    title: Incomplete
    def __init__(self, object, title) -> None: ...
    edit: Incomplete
    def OnInitDialog(self) -> None: ...

def ShowObject(object, title) -> None: ...

class dynamic_browser(dialog.Dialog):
    style: Incomplete
    cs: Incomplete
    dt: Incomplete
    hier_list: Incomplete
    def __init__(self, hli_root) -> None: ...
    def OnInitDialog(self): ...
    def OnOK(self): ...
    def OnCancel(self): ...
    def on_size(self, params) -> None: ...

def Browse(ob=...) -> None: ...

class BrowserTemplate(docview.DocTemplate):
    def __init__(self) -> None: ...
    def OpenObject(self, root): ...

class BrowserDocument(docview.Document):
    root: Incomplete
    def __init__(self, template, root) -> None: ...
    def OnOpenDocument(self, name): ...

class BrowserView(docview.TreeView):
    def OnInitialUpdate(self): ...

template: Incomplete

def MakeTemplate() -> None: ...
def BrowseMDI(ob=...) -> None: ...
