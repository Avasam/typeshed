from _typeshed import Incomplete

from . import object as object, window as window

class View(window.Wnd):
    def __init__(self, initobj) -> None: ...
    def OnInitialUpdate(self) -> None: ...

class CtrlView(View):
    def __init__(self, doc, wndclass, style: int = ...) -> None: ...

class EditView(CtrlView):
    def __init__(self, doc) -> None: ...

class RichEditView(CtrlView):
    def __init__(self, doc) -> None: ...

class ListView(CtrlView):
    def __init__(self, doc) -> None: ...

class TreeView(CtrlView):
    def __init__(self, doc) -> None: ...

class ScrollView(View):
    def __init__(self, doc) -> None: ...

class FormView(View):
    def __init__(self, doc, id) -> None: ...

class Document(object.CmdTarget):
    def __init__(self, template, docobj: Incomplete | None = ...) -> None: ...

class RichEditDoc(object.CmdTarget):
    def __init__(self, template) -> None: ...

class CreateContext:
    template: Incomplete
    doc: Incomplete
    def __init__(self, template, doc: Incomplete | None = ...) -> None: ...
    def __del__(self) -> None: ...
    def close(self) -> None: ...

class DocTemplate(object.CmdTarget):
    MakeDocument: Incomplete
    MakeFrame: Incomplete
    MakeView: Incomplete
    def __init__(
        self,
        resourceId: Incomplete | None = ...,
        MakeDocument: Incomplete | None = ...,
        MakeFrame: Incomplete | None = ...,
        MakeView: Incomplete | None = ...,
    ) -> None: ...
    def __del__(self) -> None: ...
    def CreateCreateContext(self, doc: Incomplete | None = ...): ...
    def CreateNewFrame(self, doc): ...
    def CreateNewDocument(self): ...
    def CreateView(self, frame, context) -> None: ...

class RichEditDocTemplate(DocTemplate):
    def __init__(
        self,
        resourceId: Incomplete | None = ...,
        MakeDocument: Incomplete | None = ...,
        MakeFrame: Incomplete | None = ...,
        MakeView: Incomplete | None = ...,
    ) -> None: ...

def t(): ...
