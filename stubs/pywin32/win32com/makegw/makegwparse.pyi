from _typeshed import Incomplete

class error_not_found(Exception):
    def __init__(self, msg: str = ...) -> None: ...

class error_not_supported(Exception):
    def __init__(self, msg: str = ...) -> None: ...

VERBOSE: int
DEBUG: int

class ArgFormatter:
    arg: Incomplete
    builtinIndirection: Incomplete
    declaredIndirection: Incomplete
    gatewayMode: int
    def __init__(self, arg, builtinIndirection, declaredIndirection: int = ...) -> None: ...
    def GetIndirectedArgName(self, indirectFrom, indirectionTo): ...
    def GetBuildValueArg(self): ...
    def GetParseTupleArg(self): ...
    def GetInterfaceCppObjectInfo(self): ...
    def GetInterfaceArgCleanup(self): ...
    def GetInterfaceArgCleanupGIL(self): ...
    def GetUnconstType(self): ...
    def SetGatewayMode(self) -> None: ...
    def DeclareParseArgTupleInputConverter(self): ...
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForGatewayPreCode(self): ...
    def GetBuildForInterfacePostCode(self): ...
    def GetBuildForGatewayPostCode(self): ...
    def GetAutoduckString(self): ...
    def NeedUSES_CONVERSION(self): ...

class ArgFormatterFloat(ArgFormatter):
    def GetFormatChar(self): ...
    def DeclareParseArgTupleInputConverter(self): ...
    def GetParseTupleArg(self): ...
    def GetBuildValueArg(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForGatewayPreCode(self): ...
    def GetParsePostCode(self): ...

class ArgFormatterShort(ArgFormatter):
    def GetFormatChar(self): ...
    def DeclareParseArgTupleInputConverter(self): ...
    def GetParseTupleArg(self): ...
    def GetBuildValueArg(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForGatewayPreCode(self): ...
    def GetParsePostCode(self): ...

class ArgFormatterLONG_PTR(ArgFormatter):
    def GetFormatChar(self): ...
    def DeclareParseArgTupleInputConverter(self): ...
    def GetParseTupleArg(self): ...
    def GetBuildValueArg(self): ...
    def GetBuildForInterfacePostCode(self): ...
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForGatewayPostCode(self): ...

class ArgFormatterPythonCOM(ArgFormatter):
    def GetFormatChar(self): ...
    def DeclareParseArgTupleInputConverter(self): ...
    def GetParseTupleArg(self): ...
    def GetBuildValueArg(self): ...
    def GetBuildForInterfacePostCode(self): ...

class ArgFormatterBSTR(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForInterfacePostCode(self): ...
    def GetBuildForGatewayPostCode(self): ...

class ArgFormatterOLECHAR(ArgFormatterPythonCOM):
    def GetUnconstType(self): ...
    def GetParsePostCode(self): ...
    def GetInterfaceArgCleanup(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForInterfacePostCode(self): ...
    def GetBuildForGatewayPostCode(self): ...

class ArgFormatterTCHAR(ArgFormatterPythonCOM):
    def GetUnconstType(self): ...
    def GetParsePostCode(self): ...
    def GetInterfaceArgCleanup(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForInterfacePostCode(self): ...
    def GetBuildForGatewayPostCode(self): ...

class ArgFormatterIID(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetInterfaceCppObjectInfo(self): ...

class ArgFormatterTime(ArgFormatterPythonCOM):
    def __init__(self, arg, builtinIndirection, declaredIndirection: int = ...) -> None: ...
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForInterfacePostCode(self): ...

class ArgFormatterSTATSTG(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...

class ArgFormatterGeneric(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetInterfaceArgCleanup(self): ...
    def GetBuildForInterfacePreCode(self): ...

class ArgFormatterIDLIST(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetInterfaceArgCleanup(self): ...
    def GetBuildForInterfacePreCode(self): ...

class ArgFormatterHANDLE(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...

class ArgFormatterLARGE_INTEGER(ArgFormatterPythonCOM):
    def GetKeyName(self): ...
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...

class ArgFormatterULARGE_INTEGER(ArgFormatterLARGE_INTEGER):
    def GetKeyName(self): ...

class ArgFormatterInterface(ArgFormatterPythonCOM):
    def GetInterfaceCppObjectInfo(self): ...
    def GetParsePostCode(self): ...
    def GetBuildForInterfacePreCode(self): ...
    def GetBuildForGatewayPreCode(self): ...
    def GetInterfaceArgCleanup(self): ...

class ArgFormatterVARIANT(ArgFormatterPythonCOM):
    def GetParsePostCode(self): ...
    def GetBuildForGatewayPreCode(self): ...
    def GetBuildForGatewayPostCode(self): ...

ConvertSimpleTypes: Incomplete

class ArgFormatterSimple(ArgFormatter):
    def GetFormatChar(self): ...

AllConverters: Incomplete

def make_arg_converter(arg): ...

class Argument:
    regex: Incomplete
    good_interface_names: Incomplete
    inout: Incomplete
    const: int
    arrayDecl: int
    def __init__(self, good_interface_names) -> None: ...
    name: Incomplete
    raw_type: Incomplete
    indirectionLevel: int
    type: Incomplete
    unc_type: Incomplete
    def BuildFromFile(self, file) -> None: ...
    def HasAttribute(self, typ): ...
    def GetRawDeclaration(self): ...

class Method:
    regex: Incomplete
    good_interface_names: Incomplete
    name: Incomplete
    args: Incomplete
    def __init__(self, good_interface_names) -> None: ...
    result: Incomplete
    def BuildFromFile(self, file) -> None: ...

class Interface:
    regex: Incomplete
    methods: Incomplete
    name: Incomplete
    base: Incomplete
    def __init__(self, mo) -> None: ...
    def BuildMethods(self, file) -> None: ...

def find_interface(interfaceName, file): ...
def parse_interface_info(interfaceName, file): ...
def test() -> None: ...
def test_regex(r, text) -> None: ...
