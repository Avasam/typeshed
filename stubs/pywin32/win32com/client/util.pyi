from _typeshed import Incomplete

from win32com.client import Dispatch as Dispatch

PyIDispatchType: Incomplete

def WrapEnum(ob, resultCLSID: Incomplete | None = ...): ...

class Enumerator:
    index: int
    def __init__(self, enum) -> None: ...
    def __getitem__(self, index): ...
    def __call__(self, index): ...
    def Next(self, count: int = ...): ...
    def Reset(self): ...
    def Clone(self): ...

class EnumVARIANT(Enumerator):
    resultCLSID: Incomplete
    def __init__(self, enum, resultCLSID: Incomplete | None = ...) -> None: ...

class Iterator:
    resultCLSID: Incomplete
    def __init__(self, enum, resultCLSID: Incomplete | None = ...) -> None: ...
    def __iter__(self): ...
    def __next__(self): ...
