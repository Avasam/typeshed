from _typeshed import Incomplete
from typing import Any

def Table(*args, **kw): ...
def Column(*args, **kw): ...

class eq_type_affinity:
    target: Incomplete
    def __init__(self, target: type[Incomplete] | Incomplete) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...

class eq_clause_element:
    target: Any
    def __init__(self, target) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...
