from _typeshed import Incomplete

class Driver:
    grammar: Incomplete
    logger: Incomplete
    convert: Incomplete
    def __init__(self, grammar, convert: Incomplete | None = ..., logger: Incomplete | None = ...) -> None: ...
    def parse_tokens(self, tokens, debug: bool = ...): ...
    def parse_stream_raw(self, stream, debug: bool = ...): ...
    def parse_stream(self, stream, debug: bool = ...): ...
    def parse_file(self, filename, encoding: Incomplete | None = ..., debug: bool = ...): ...
    def parse_string(self, text, debug: bool = ...): ...

def load_grammar(gt: str = ..., gp: Incomplete | None = ..., save: bool = ..., force: bool = ..., logger: Incomplete | None = ...): ...
