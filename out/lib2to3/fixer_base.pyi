from . import pygram as pygram
from .fixer_util import does_tree_import as does_tree_import
from .patcomp import PatternCompiler as PatternCompiler
from _typeshed import Incomplete

class BaseFix:
    PATTERN: Incomplete
    pattern: Incomplete
    pattern_tree: Incomplete
    options: Incomplete
    filename: Incomplete
    numbers: Incomplete
    used_names: Incomplete
    order: str
    explicit: bool
    run_order: int
    keep_line_order: bool
    BM_compatible: bool
    syms: Incomplete
    log: Incomplete
    def __init__(self, options, log) -> None: ...
    def compile_pattern(self) -> None: ...
    def set_filename(self, filename) -> None: ...
    def match(self, node): ...
    def transform(self, node, results) -> None: ...
    def new_name(self, template: str = ...): ...
    first_log: bool
    def log_message(self, message) -> None: ...
    def cannot_convert(self, node, reason: Incomplete | None = ...) -> None: ...
    def warning(self, node, reason) -> None: ...
    def start_tree(self, tree, filename) -> None: ...
    def finish_tree(self, tree, filename) -> None: ...

class ConditionalFix(BaseFix):
    skip_on: Incomplete
    def start_tree(self, *args) -> None: ...
    def should_skip(self, node): ...
